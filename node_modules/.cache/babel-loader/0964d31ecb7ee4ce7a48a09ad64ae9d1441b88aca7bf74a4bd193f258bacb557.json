{"ast":null,"code":"// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5001/api/auth/login\", {\n//         email,\n//         password,\n//       });\n//       const { token, role } = response.data;\n//       sessionStorage.setItem(\"authToken\", token);\n//       sessionStorage.setItem(\"userRole\", role);\n//       if (role === \"admin\") {\n//         window.location.href = \"/admin-dashboard\";\n//       } else {\n//         window.location.href = \"/user-dashboard\";\n//       }\n//     } catch (error) {\n//       console.error(\"Error during login\", error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n//       <h2 className=\"title\">Sign In</h2>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-user\"></i>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-lock\"></i>\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" className=\"btn solid\">\n//         Sign In\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Login;","map":{"version":3,"names":[],"sources":["/home/krish/Documents/project/frontend fixed before/picrego/Frontend/src/Components/Authentication/Login.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Login = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5001/api/auth/login\", {\n//         email,\n//         password,\n//       });\n//       const { token, role } = response.data;\n//       sessionStorage.setItem(\"authToken\", token);\n//       sessionStorage.setItem(\"userRole\", role);\n//       if (role === \"admin\") {\n//         window.location.href = \"/admin-dashboard\";\n//       } else {\n//         window.location.href = \"/user-dashboard\";\n//       }\n//     } catch (error) {\n//       console.error(\"Error during login\", error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"sign-in-form\" onSubmit={handleSubmit}>\n//       <h2 className=\"title\">Sign In</h2>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-user\"></i>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-lock\"></i>\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" className=\"btn solid\">\n//         Sign In\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Login;\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}