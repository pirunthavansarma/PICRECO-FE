{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/frontend fixed before/picrego/Frontend/src/Components/Authentication/Register.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Register = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5001/api/users/register\", {\n//         name,\n//         email,\n//         password,\n//       });\n//       const { token, role } = response.data;\n//       sessionStorage.setItem(\"authToken\", token);\n//       sessionStorage.setItem(\"userRole\", role);\n//       if (role === \"admin\") {\n//         window.location.href = \"/admin-dashboard\";\n//       } else {\n//         window.location.href = \"/user-dashboard\";\n//       }\n//     } catch (error) {\n//       console.error(\"Error during registration\", error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n//       <h2 className=\"title\">Sign Up</h2>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-user\"></i>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-envelope\"></i>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-lock\"></i>\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" className=\"btn solid\">\n//         Sign Up\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Register;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AuthForm.css'; // Adjust your CSS import if needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('', {\n        email,\n        password\n      });\n      sessionStorage.setItem('userRole', response.data.role);\n      sessionStorage.setItem('authToken', response.data.token);\n      navigate('/login');\n    } catch (error) {\n      console.error('Registration failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleRegister,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","Register","_s","email","setEmail","password","setPassword","navigate","handleRegister","e","preventDefault","response","post","sessionStorage","setItem","data","role","token","error","console","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/frontend fixed before/picrego/Frontend/src/Components/Authentication/Register.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import axios from \"axios\";\n\n// const Register = () => {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [name, setName] = useState(\"\");\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await axios.post(\"http://localhost:5001/api/users/register\", {\n//         name,\n//         email,\n//         password,\n//       });\n//       const { token, role } = response.data;\n//       sessionStorage.setItem(\"authToken\", token);\n//       sessionStorage.setItem(\"userRole\", role);\n//       if (role === \"admin\") {\n//         window.location.href = \"/admin-dashboard\";\n//       } else {\n//         window.location.href = \"/user-dashboard\";\n//       }\n//     } catch (error) {\n//       console.error(\"Error during registration\", error);\n//     }\n//   };\n\n//   return (\n//     <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n//       <h2 className=\"title\">Sign Up</h2>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-user\"></i>\n//         <input\n//           type=\"text\"\n//           placeholder=\"Name\"\n//           value={name}\n//           onChange={(e) => setName(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-envelope\"></i>\n//         <input\n//           type=\"email\"\n//           placeholder=\"Email\"\n//           value={email}\n//           onChange={(e) => setEmail(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <div className=\"input-field\">\n//         <i className=\"fas fa-lock\"></i>\n//         <input\n//           type=\"password\"\n//           placeholder=\"Password\"\n//           value={password}\n//           onChange={(e) => setPassword(e.target.value)}\n//           required\n//         />\n//       </div>\n//       <button type=\"submit\" className=\"btn solid\">\n//         Sign Up\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default Register;\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './AuthForm.css'; // Adjust your CSS import if needed\n\nconst Register = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleRegister = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('', { email, password });\n      sessionStorage.setItem('userRole', response.data.role);\n      sessionStorage.setItem('authToken', response.data.token);\n      navigate('/login');\n    } catch (error) {\n      console.error('Registration failed', error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleRegister}>\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n\nexport default Register;\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAMW,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,EAAE,EAAE;QAAET,KAAK;QAAEE;MAAS,CAAC,CAAC;MAC1DQ,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC;MACtDH,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEH,QAAQ,CAACI,IAAI,CAACE,KAAK,CAAC;MACxDV,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACElB,OAAA;IAAMoB,QAAQ,EAAEZ,cAAe;IAAAa,QAAA,gBAC7BrB,OAAA;MAAOsB,IAAI,EAAC,OAAO;MAACC,WAAW,EAAC,OAAO;MAACC,KAAK,EAAErB,KAAM;MAACsB,QAAQ,EAAGhB,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnG9B,OAAA;MAAOsB,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAEnB,QAAS;MAACoB,QAAQ,EAAGhB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACiB,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/G9B,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX,CAAC;AAAC5B,EAAA,CAxBID,QAAQ;EAAA,QAGKJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,QAAQ;AA0Bd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}