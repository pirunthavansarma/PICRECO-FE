{"ast":null,"code":"\n// import React, { useState, useEffect } from 'react';\n// import './Payment.css';\n// const baseUrl = process.env.REACT_APP_BACKEND_URL;\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n//   // State to store selected plan details\n//   const [selectedPlanDetails, setSelectedPlanDetails] = useState({\n//     name: '',\n//     price: ''\n//   });\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script dynamically\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => setPaypalLoaded(true);\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script); // Clean up script on component unmount\n//     };\n//   }, []);\n\n//   const renderPayPalButton = (planId) => {\n//     if (!paypalLoaded) return;\n\n//     // Remove previous PayPal button if exists\n//     const previousButton = document.getElementById('paypal-button-container');\n//     if (previousButton) {\n//       previousButton.innerHTML = '';\n//     }\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           plan_id: planId // Use the selected plan ID\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         const subscriptionID = data.subscriptionID;\n//         alert('Subscription created successfully! Subscription ID: ' + subscriptionID);\n\n//         // Set subscription status to 'true' after successful payment\n//         const token = sessionStorage.getItem('authToken'); // Assuming the token is saved in sessionStorage\n//         sessionStorage.setItem('subscriptionID', subscriptionID);\n//         sessionStorage.setItem('isSubscribed', 'true');\n//         console.log(subscriptionID); // Now it's safe to use\n\n//         // const subscriptionID = sessionStorage.getItem('subscriptionID'); // Assuming the token is saved in sessionStorage\n\n//         // Send subscription details to the backend\n//         fetch(`${baseUrl}/api/payments/create-subscription`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`,\n//           },\n//           body: JSON.stringify({\n//             subscriptionID,\n//             planId: selectedPlan,\n//             planName: selectedPlanDetails.name,\n//             planPrice: selectedPlanDetails.price,\n//           }),\n//         })\n//         .then(response => response.json())\n//         .then(data => console.log('Backend response:', data))\n//         .catch(error => console.error('Error sending subscription details:', error));\n//       },\n//       onError: function (err) {\n//         console.error('PayPal Error:', err);\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in the container\n//   };\n\n//   const handleSelectPlan = (plan) => {\n//     setSelectedPlan(plan.planId);\n//     setSelectedPlanDetails({\n//       name: plan.name,\n//       price: plan.price\n//     });\n//     console.log(`Selected plan ID: ${plan.planId}`); // Debugging statement\n\n//     // Automatically render and open the PayPal subscription modal\n//     renderPayPalButton(plan.planId);\n//     document.getElementById('paypal-button-container').scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Display selected plan details */}\n//       {selectedPlan && (\n//         <div className=\"selected-plan-details\">\n//           <h3>Selected Plan</h3>\n//           <p><strong>Name:</strong> {selectedPlanDetails.name}</p>\n//           <p><strong>Price:</strong> ${selectedPlanDetails.price}</p>\n//         </div>\n//       )}\n\n//       {/* PayPal button container */}\n//       <div id=\"paypal-button-container\"></div>\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;\n\n// import React, { useState, useEffect } from 'react';\n// import './Payment.css';\n// const baseUrl = process.env.REACT_APP_BACKEND_URL;\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n//   // State to store selected plan details\n//   const [selectedPlanDetails, setSelectedPlanDetails] = useState({\n//     name: '',\n//     price: ''\n//   });\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script dynamically\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => setPaypalLoaded(true);\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script); // Clean up script on component unmount\n//     };\n//   }, []);\n\n//   const renderPayPalButton = (planId) => {\n//     if (!paypalLoaded) return;\n\n//     // Remove previous PayPal button if exists\n//     const previousButton = document.getElementById('paypal-button-container');\n//     if (previousButton) {\n//       previousButton.innerHTML = '';\n//     }\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           plan_id: planId // Use the selected plan ID\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         const subscriptionID = data.subscriptionID;\n//         alert('Subscription created successfully! Subscription ID: ' + subscriptionID);\n\n//         // Save subscription details in sessionStorage\n//         sessionStorage.setItem('subscriptionID', subscriptionID);\n//         sessionStorage.setItem('isSubscribed', 'true');\n\n//         const token = sessionStorage.getItem('authToken'); // Retrieve authToken from sessionStorage\n\n//         // Send subscription details to the backend\n//         fetch(`${baseUrl}/api/payments/create-subscription`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`,\n//           },\n//           body: JSON.stringify({\n//             subscriptionID,\n//             planId: selectedPlan,\n//             planName: selectedPlanDetails.name,\n//             planPrice: selectedPlanDetails.price,\n//           }),\n//         })\n//           .then(response => response.json())\n//           .then(data => console.log('Backend response:', data))\n//           .catch(error => console.error('Error sending subscription details:', error));\n//       },\n//       onError: function (err) {\n//         console.error('PayPal Error:', err);\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in the container\n//   };\n\n//   const handleSelectPlan = (plan) => {\n//     setSelectedPlan(plan.planId);\n//     setSelectedPlanDetails({\n//       name: plan.name,\n//       price: plan.price\n//     });\n\n//     // Automatically render and open the PayPal subscription modal\n//     renderPayPalButton(plan.planId);\n//     document.getElementById('paypal-button-container').scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Display selected plan details */}\n//       {selectedPlan && (\n//         <div className=\"selected-plan-details\">\n//           <h3>Selected Plan</h3>\n//           <p><strong>Name:</strong> {selectedPlanDetails.name}</p>\n//           <p><strong>Price:</strong> ${selectedPlanDetails.price}</p>\n//         </div>\n//       )}\n\n//       {/* PayPal button container */}\n//       <div id=\"paypal-button-container\"></div>\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;","map":{"version":3,"names":[],"sources":["/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Payment/Payment.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import './Payment.css';\n// const baseUrl = process.env.REACT_APP_BACKEND_URL;\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n//   // State to store selected plan details\n//   const [selectedPlanDetails, setSelectedPlanDetails] = useState({\n//     name: '',\n//     price: ''\n//   });\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script dynamically\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => setPaypalLoaded(true);\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script); // Clean up script on component unmount\n//     };\n//   }, []);\n\n//   const renderPayPalButton = (planId) => {\n//     if (!paypalLoaded) return;\n\n//     // Remove previous PayPal button if exists\n//     const previousButton = document.getElementById('paypal-button-container');\n//     if (previousButton) {\n//       previousButton.innerHTML = '';\n//     }\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           plan_id: planId // Use the selected plan ID\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         const subscriptionID = data.subscriptionID;\n//         alert('Subscription created successfully! Subscription ID: ' + subscriptionID);\n\n//         // Set subscription status to 'true' after successful payment\n//         const token = sessionStorage.getItem('authToken'); // Assuming the token is saved in sessionStorage\n//         sessionStorage.setItem('subscriptionID', subscriptionID);\n//         sessionStorage.setItem('isSubscribed', 'true');\n//         console.log(subscriptionID); // Now it's safe to use\n\n//         // const subscriptionID = sessionStorage.getItem('subscriptionID'); // Assuming the token is saved in sessionStorage\n\n//         // Send subscription details to the backend\n//         fetch(`${baseUrl}/api/payments/create-subscription`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`,\n//           },\n//           body: JSON.stringify({\n//             subscriptionID,\n//             planId: selectedPlan,\n//             planName: selectedPlanDetails.name,\n//             planPrice: selectedPlanDetails.price,\n//           }),\n//         })\n//         .then(response => response.json())\n//         .then(data => console.log('Backend response:', data))\n//         .catch(error => console.error('Error sending subscription details:', error));\n//       },\n//       onError: function (err) {\n//         console.error('PayPal Error:', err);\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in the container\n//   };\n\n//   const handleSelectPlan = (plan) => {\n//     setSelectedPlan(plan.planId);\n//     setSelectedPlanDetails({\n//       name: plan.name,\n//       price: plan.price\n//     });\n//     console.log(`Selected plan ID: ${plan.planId}`); // Debugging statement\n\n//     // Automatically render and open the PayPal subscription modal\n//     renderPayPalButton(plan.planId);\n//     document.getElementById('paypal-button-container').scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Display selected plan details */}\n//       {selectedPlan && (\n//         <div className=\"selected-plan-details\">\n//           <h3>Selected Plan</h3>\n//           <p><strong>Name:</strong> {selectedPlanDetails.name}</p>\n//           <p><strong>Price:</strong> ${selectedPlanDetails.price}</p>\n//         </div>\n//       )}\n\n//       {/* PayPal button container */}\n//       <div id=\"paypal-button-container\"></div>\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;\n\n// import React, { useState, useEffect } from 'react';\n// import './Payment.css';\n// const baseUrl = process.env.REACT_APP_BACKEND_URL;\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n//   // State to store selected plan details\n//   const [selectedPlanDetails, setSelectedPlanDetails] = useState({\n//     name: '',\n//     price: ''\n//   });\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' },\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script dynamically\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => setPaypalLoaded(true);\n//     document.body.appendChild(script);\n\n//     return () => {\n//       document.body.removeChild(script); // Clean up script on component unmount\n//     };\n//   }, []);\n\n//   const renderPayPalButton = (planId) => {\n//     if (!paypalLoaded) return;\n\n//     // Remove previous PayPal button if exists\n//     const previousButton = document.getElementById('paypal-button-container');\n//     if (previousButton) {\n//       previousButton.innerHTML = '';\n//     }\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           plan_id: planId // Use the selected plan ID\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         const subscriptionID = data.subscriptionID;\n//         alert('Subscription created successfully! Subscription ID: ' + subscriptionID);\n\n//         // Save subscription details in sessionStorage\n//         sessionStorage.setItem('subscriptionID', subscriptionID);\n//         sessionStorage.setItem('isSubscribed', 'true');\n\n//         const token = sessionStorage.getItem('authToken'); // Retrieve authToken from sessionStorage\n\n//         // Send subscription details to the backend\n//         fetch(`${baseUrl}/api/payments/create-subscription`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//             'Authorization': `Bearer ${token}`,\n//           },\n//           body: JSON.stringify({\n//             subscriptionID,\n//             planId: selectedPlan,\n//             planName: selectedPlanDetails.name,\n//             planPrice: selectedPlanDetails.price,\n//           }),\n//         })\n//           .then(response => response.json())\n//           .then(data => console.log('Backend response:', data))\n//           .catch(error => console.error('Error sending subscription details:', error));\n//       },\n//       onError: function (err) {\n//         console.error('PayPal Error:', err);\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in the container\n//   };\n\n//   const handleSelectPlan = (plan) => {\n//     setSelectedPlan(plan.planId);\n//     setSelectedPlanDetails({\n//       name: plan.name,\n//       price: plan.price\n//     });\n\n//     // Automatically render and open the PayPal subscription modal\n//     renderPayPalButton(plan.planId);\n//     document.getElementById('paypal-button-container').scrollIntoView({ behavior: 'smooth' });\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {/* Display selected plan details */}\n//       {selectedPlan && (\n//         <div className=\"selected-plan-details\">\n//           <h3>Selected Plan</h3>\n//           <p><strong>Name:</strong> {selectedPlanDetails.name}</p>\n//           <p><strong>Price:</strong> ${selectedPlanDetails.price}</p>\n//         </div>\n//       )}\n\n//       {/* PayPal button container */}\n//       <div id=\"paypal-button-container\"></div>\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}