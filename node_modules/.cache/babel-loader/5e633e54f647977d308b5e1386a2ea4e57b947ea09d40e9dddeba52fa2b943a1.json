{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Payment/Payment.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Payment.css';\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => renderPayPalButton();\n//     document.body.appendChild(script);\n//   }, [selectedPlan]);\n\n//   const renderPayPalButton = () => {\n//     if (!selectedPlan) return;\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           /* Creates the subscription */\n//           plan_id: selectedPlan // Use selected plan ID from state\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         alert('Subscription created successfully! Subscription ID: ' + data.subscriptionID);\n//         // Optionally handle post-approval actions, e.g., update backend\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in this container\n//   };\n\n//   const handleSelectPlan = (planId) => {\n//     setSelectedPlan(planId);\n//     console.log(`Selected plan ID: ${planId}`); // Debugging statement\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan.planId)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       {/* PayPal button container */}\n//       {selectedPlan && <div id=\"paypal-button-container\"></div>}\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;\n\nimport React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentPage = () => {\n  _s();\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n  // Define PayPal plan IDs\n  const plans = [{\n    name: 'Pro',\n    price: '16.58',\n    storage: '100GB',\n    planId: 'P-0LX228426N2348600M3QPB3Q'\n  },\n  // Use actual PayPal Plan ID here\n  {\n    name: 'Ultra',\n    price: '24.91',\n    storage: '500GB',\n    planId: 'P-0LX228426N2348600M3QPB3Q'\n  },\n  // Use actual PayPal Plan ID here\n  {\n    name: 'Promax',\n    price: '31.58',\n    storage: '1TB',\n    planId: 'P-0LX228426N2348600M3QPB3Q'\n  } // Use actual PayPal Plan ID here\n  ];\n  useEffect(() => {\n    // Load PayPal SDK script dynamically\n    const script = document.createElement('script');\n    script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n    script.async = true;\n    script.onload = () => setPaypalLoaded(true);\n    document.body.appendChild(script);\n    return () => {\n      document.body.removeChild(script); // Clean up script on component unmount\n    };\n  }, []);\n  const renderPayPalButton = planId => {\n    if (!paypalLoaded) return;\n\n    // Remove previous PayPal button if exists\n    const previousButton = document.getElementById('paypal-button-container');\n    if (previousButton) {\n      previousButton.innerHTML = '';\n    }\n    window.paypal.Buttons({\n      style: {\n        shape: 'pill',\n        color: 'silver',\n        layout: 'horizontal',\n        label: 'subscribe'\n      },\n      createSubscription: function (data, actions) {\n        return actions.subscription.create({\n          plan_id: planId // Use the selected plan ID\n        });\n      },\n      onApprove: function (data, actions) {\n        alert('Subscription created successfully! Subscription ID: ' + data.subscriptionID);\n        // Optionally, handle post-approval actions (e.g., update the backend)\n      },\n      onError: function (err) {\n        console.error('PayPal Error:', err);\n      }\n    }).render('#paypal-button-container'); // Render PayPal button in the container\n  };\n  const handleSelectPlan = planId => {\n    setSelectedPlan(planId);\n    console.log(`Selected plan ID: ${planId}`); // Debugging statement\n\n    // Automatically render and open the PayPal subscription modal\n    renderPayPalButton(planId);\n    document.getElementById('paypal-button-container').scrollIntoView(); // Scroll to PayPal button container\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plans-container\",\n      children: plans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: plan.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"$\", plan.price, \" per month\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [plan.storage, \" Storage\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleSelectPlan(plan.planId),\n          children: [\"Select \", plan.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"paypal-button-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentPage, \"u0ITsCVXj8mBf0uxhqBy/MUoOq4=\");\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PaymentPage","_s","selectedPlan","setSelectedPlan","paypalLoaded","setPaypalLoaded","plans","name","price","storage","planId","script","document","createElement","src","async","onload","body","appendChild","removeChild","renderPayPalButton","previousButton","getElementById","innerHTML","window","paypal","Buttons","style","shape","color","layout","label","createSubscription","data","actions","subscription","create","plan_id","onApprove","alert","subscriptionID","onError","err","console","error","render","handleSelectPlan","log","scrollIntoView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","plan","index","onClick","id","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Payment/Payment.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './Payment.css';\n\n// const PaymentPage = () => {\n//   const [selectedPlan, setSelectedPlan] = useState(null);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n\n//   // Define PayPal plan IDs\n//   const plans = [\n//     { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//     { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//     { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n//   ];\n\n//   useEffect(() => {\n//     // Load PayPal SDK script\n//     const script = document.createElement('script');\n//     script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n//     script.async = true;\n//     script.onload = () => renderPayPalButton();\n//     document.body.appendChild(script);\n//   }, [selectedPlan]);\n\n//   const renderPayPalButton = () => {\n//     if (!selectedPlan) return;\n\n//     window.paypal.Buttons({\n//       style: {\n//         shape: 'pill',\n//         color: 'silver',\n//         layout: 'horizontal',\n//         label: 'subscribe'\n//       },\n//       createSubscription: function (data, actions) {\n//         return actions.subscription.create({\n//           /* Creates the subscription */\n//           plan_id: selectedPlan // Use selected plan ID from state\n//         });\n//       },\n//       onApprove: function (data, actions) {\n//         alert('Subscription created successfully! Subscription ID: ' + data.subscriptionID);\n//         // Optionally handle post-approval actions, e.g., update backend\n//       }\n//     }).render('#paypal-button-container'); // Render PayPal button in this container\n//   };\n\n//   const handleSelectPlan = (planId) => {\n//     setSelectedPlan(planId);\n//     console.log(`Selected plan ID: ${planId}`); // Debugging statement\n//   };\n\n//   return (\n//     <div className=\"payment-page\">\n//       <h2>Select a Plan</h2>\n//       <div className=\"plans-container\">\n//         {plans.map((plan, index) => (\n//           <div className=\"plan-card\" key={index}>\n//             <h3>{plan.name}</h3>\n//             <p>${plan.price} per month</p>\n//             <p>{plan.storage} Storage</p>\n//             <button onClick={() => handleSelectPlan(plan.planId)}>\n//               Select {plan.name}\n//             </button>\n//           </div>\n//         ))}\n//       </div>\n\n//       {error && <p className=\"error-message\">{error}</p>}\n\n//       {/* PayPal button container */}\n//       {selectedPlan && <div id=\"paypal-button-container\"></div>}\n//     </div>\n//   );\n// };\n\n// export default PaymentPage;\n\nimport React, { useState, useEffect } from 'react';\nimport './Payment.css';\n\nconst PaymentPage = () => {\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const [paypalLoaded, setPaypalLoaded] = useState(false);\n\n  // Define PayPal plan IDs\n  const plans = [\n    { name: 'Pro', price: '16.58', storage: '100GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n    { name: 'Ultra', price: '24.91', storage: '500GB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n    { name: 'Promax', price: '31.58', storage: '1TB', planId: 'P-0LX228426N2348600M3QPB3Q' }, // Use actual PayPal Plan ID here\n  ];\n\n  useEffect(() => {\n    // Load PayPal SDK script dynamically\n    const script = document.createElement('script');\n    script.src = 'https://www.paypal.com/sdk/js?client-id=ARuLPQZ6fA9iKKCu-YyCrFX5OpGJj92bvhHXLFIADCr6q3IU9MM6ILvYhhyYlrJuuZZa5MDm3JRIlt5R&vault=true&intent=subscription';\n    script.async = true;\n    script.onload = () => setPaypalLoaded(true);\n    document.body.appendChild(script);\n\n    return () => {\n      document.body.removeChild(script); // Clean up script on component unmount\n    };\n  }, []);\n\n  const renderPayPalButton = (planId) => {\n    if (!paypalLoaded) return;\n\n    // Remove previous PayPal button if exists\n    const previousButton = document.getElementById('paypal-button-container');\n    if (previousButton) {\n      previousButton.innerHTML = '';\n    }\n\n    window.paypal.Buttons({\n      style: {\n        shape: 'pill',\n        color: 'silver',\n        layout: 'horizontal',\n        label: 'subscribe'\n      },\n      createSubscription: function (data, actions) {\n        return actions.subscription.create({\n          plan_id: planId // Use the selected plan ID\n        });\n      },\n      onApprove: function (data, actions) {\n        alert('Subscription created successfully! Subscription ID: ' + data.subscriptionID);\n        // Optionally, handle post-approval actions (e.g., update the backend)\n      },\n      onError: function (err) {\n        console.error('PayPal Error:', err);\n      }\n    }).render('#paypal-button-container'); // Render PayPal button in the container\n  };\n\n  const handleSelectPlan = (planId) => {\n    setSelectedPlan(planId);\n    console.log(`Selected plan ID: ${planId}`); // Debugging statement\n\n    // Automatically render and open the PayPal subscription modal\n    renderPayPalButton(planId);\n    document.getElementById('paypal-button-container').scrollIntoView(); // Scroll to PayPal button container\n  };\n\n  return (\n    <div className=\"payment-page\">\n      <h2>Select a Plan</h2>\n      <div className=\"plans-container\">\n        {plans.map((plan, index) => (\n          <div className=\"plan-card\" key={index}>\n            <h3>{plan.name}</h3>\n            <p>${plan.price} per month</p>\n            <p>{plan.storage} Storage</p>\n            <button onClick={() => handleSelectPlan(plan.planId)}>\n              Select {plan.name}\n            </button>\n          </div>\n        ))}\n      </div>\n\n      {/* PayPal button container */}\n      <div id=\"paypal-button-container\"></div>\n    </div>\n  );\n};\n\nexport default PaymentPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}