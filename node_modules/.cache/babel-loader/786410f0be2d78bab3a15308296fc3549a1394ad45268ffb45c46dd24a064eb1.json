{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Dashboards/AdminDashboard.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const AdminDashboard = () => {\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     sessionStorage.removeItem('authToken');\n//     sessionStorage.removeItem('userRole');\n//     navigate('/auth'); // Redirect to login page\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Admin Dashboard</h1>\n//       <button className=\"btn btn-dark\" onClick={handleLogout}>Logout</button>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [users, setUsers] = useState([]); // All users fetched from the backend\n  const [filteredUsers, setFilteredUsers] = useState([]); // Users filtered by paid photographers\n  const [showPaidOnly, setShowPaidOnly] = useState(false); // Toggle for filtering paid photographers\n  const [payments, setPayments] = useState([]); // Payments data fetched from the backend\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Effect to handle authentication and data fetching\n  useEffect(() => {\n    const authToken = sessionStorage.getItem('authToken'); // Get JWT token from session storage\n    const userRole = sessionStorage.getItem('userRole'); // Get user role from session storage\n\n    // If no token or user is not admin, redirect to login\n    if (!authToken || userRole !== 'admin') {\n      navigate('/auth');\n    } else if (location.state === null && location.pathname === '/admin-dashboard') {\n      // If the user manually types the URL, redirect to login if not authenticated\n      navigate('/auth');\n    } else {\n      // Fetch users and payments once authenticated\n      fetchUsers(authToken);\n      fetchPayments(authToken);\n    }\n  }, [navigate, location]);\n\n  // Fetch all users from backend\n  const fetchUsers = async token => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/admin/users', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUsers(response.data.users); // Set users state with fetched data\n      setFilteredUsers(response.data.users); // By default, show all users\n    } catch (error) {\n      console.error('Error fetching users', error);\n    }\n  };\n\n  // Fetch payments from backend\n  const fetchPayments = async token => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/admin/payments', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setPayments(response.data.payments); // Set payments state with fetched data\n    } catch (error) {\n      console.error('Error fetching payments', error);\n    }\n  };\n\n  // Handle filter for showing only paid photographers\n  const handleFilterChange = () => {\n    setShowPaidOnly(!showPaidOnly);\n    if (!showPaidOnly) {\n      const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n      setFilteredUsers(paidPhotographers); // Show only paid photographers\n    } else {\n      setFilteredUsers(users); // Show all users when filter is turned off\n    }\n  };\n\n  // Handle logout: Remove token and role from session storage\n  const handleLogout = () => {\n    sessionStorage.removeItem('authToken');\n    sessionStorage.removeItem('userRole');\n    navigate('/auth'); // Redirect to login page after logout\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-dark\",\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: showPaidOnly,\n          onChange: handleFilterChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), \"Show Paid Photographers Only\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [user.name, \" (\", user.email, \") - \", user.role]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-tracking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Payment Tracking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: payments.map(payment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [payment.userEmail, \" - \", payment.planName, \": $\", payment.planPrice, \" (\", payment.status, \")\"]\n        }, payment._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"sI834h1iKfVnW3w+Zp13uN4ksM4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","filteredUsers","setFilteredUsers","showPaidOnly","setShowPaidOnly","payments","setPayments","navigate","location","authToken","sessionStorage","getItem","userRole","state","pathname","fetchUsers","fetchPayments","token","response","get","headers","Authorization","data","error","console","handleFilterChange","paidPhotographers","filter","user","isPaid","role","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","checked","onChange","map","name","email","_id","payment","userEmail","planName","planPrice","status","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Dashboards/AdminDashboard.js"],"sourcesContent":["// import React from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// const AdminDashboard = () => {\n//   const navigate = useNavigate();\n\n//   const handleLogout = () => {\n//     sessionStorage.removeItem('authToken');\n//     sessionStorage.removeItem('userRole');\n//     navigate('/auth'); // Redirect to login page\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <h1>Admin Dashboard</h1>\n//       <button className=\"btn btn-dark\" onClick={handleLogout}>Logout</button>\n//     </div>\n//   );\n// };\n\n// export default AdminDashboard;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AdminDashboard = () => {\n  const [users, setUsers] = useState([]); // All users fetched from the backend\n  const [filteredUsers, setFilteredUsers] = useState([]); // Users filtered by paid photographers\n  const [showPaidOnly, setShowPaidOnly] = useState(false); // Toggle for filtering paid photographers\n  const [payments, setPayments] = useState([]); // Payments data fetched from the backend\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  // Effect to handle authentication and data fetching\n  useEffect(() => {\n    const authToken = sessionStorage.getItem('authToken'); // Get JWT token from session storage\n    const userRole = sessionStorage.getItem('userRole');   // Get user role from session storage\n\n    // If no token or user is not admin, redirect to login\n    if (!authToken || userRole !== 'admin') {\n      navigate('/auth');\n    } else if (location.state === null && location.pathname === '/admin-dashboard') {\n      // If the user manually types the URL, redirect to login if not authenticated\n      navigate('/auth');\n    } else {\n      // Fetch users and payments once authenticated\n      fetchUsers(authToken);\n      fetchPayments(authToken);\n    }\n  }, [navigate, location]);\n\n  // Fetch all users from backend\n  const fetchUsers = async (token) => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/admin/users', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUsers(response.data.users);        // Set users state with fetched data\n      setFilteredUsers(response.data.users); // By default, show all users\n    } catch (error) {\n      console.error('Error fetching users', error);\n    }\n  };\n\n  // Fetch payments from backend\n  const fetchPayments = async (token) => {\n    try {\n      const response = await axios.get('http://localhost:5001/api/admin/payments', {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setPayments(response.data.payments); // Set payments state with fetched data\n    } catch (error) {\n      console.error('Error fetching payments', error);\n    }\n  };\n\n  // Handle filter for showing only paid photographers\n  const handleFilterChange = () => {\n    setShowPaidOnly(!showPaidOnly);\n    if (!showPaidOnly) {\n      const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n      setFilteredUsers(paidPhotographers); // Show only paid photographers\n    } else {\n      setFilteredUsers(users); // Show all users when filter is turned off\n    }\n  };\n\n  // Handle logout: Remove token and role from session storage\n  const handleLogout = () => {\n    sessionStorage.removeItem('authToken');\n    sessionStorage.removeItem('userRole');\n    navigate('/auth'); // Redirect to login page after logout\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Admin Dashboard</h1>\n\n      {/* Logout Button */}\n      <button className=\"btn btn-dark\" onClick={handleLogout}>Logout</button>\n\n      {/* User List */}\n      <div className=\"user-list\">\n        <h2>Users</h2>\n        {/* Checkbox to filter only paid photographers */}\n        <label>\n          <input\n            type=\"checkbox\"\n            checked={showPaidOnly}\n            onChange={handleFilterChange}\n          />\n          Show Paid Photographers Only\n        </label>\n        <ul>\n          {filteredUsers.map(user => (\n            <li key={user._id}>\n              {user.name} ({user.email}) - {user.role}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Payment Tracking */}\n      <div className=\"payment-tracking\">\n        <h2>Payment Tracking</h2>\n        <ul>\n          {payments.map(payment => (\n            <li key={payment._id}>\n              {payment.userEmail} - {payment.planName}: ${payment.planPrice} ({payment.status})\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}