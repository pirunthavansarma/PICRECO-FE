{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Dashboards/UserManagement.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './UserManagement.css'; // Ensure this file exists and is styled\n\n// const UserManagement = () => {\n//   const [users, setUsers] = useState([]);\n//   const [filteredUsers, setFilteredUsers] = useState([]);\n//   const [showPaidOnly, setShowPaidOnly] = useState(false);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const token = sessionStorage.getItem('authToken');\n//         const response = await axios.get('http://localhost:5001/api/users/admin-data', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setUsers(response.data.users);\n//         setFilteredUsers(response.data.users); // Initially set all users as filtered users\n//       } catch (error) {\n//         console.error('Error fetching users:', error);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   const handleFilterChange = () => {\n//     setShowPaidOnly(!showPaidOnly);\n//     if (!showPaidOnly) {\n//       const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n//       setFilteredUsers(paidPhotographers);\n//     } else {\n//       setFilteredUsers(users);\n//     }\n//   };\n\n//   const handleDelete = async (userId) => {\n//     try {\n//       const token = sessionStorage.getItem('authToken');\n//       await axios.delete(`http://localhost:5001/api/users/${userId}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setUsers(users.filter(user => user._id !== userId));\n//       setFilteredUsers(filteredUsers.filter(user => user._id !== userId));\n//     } catch (error) {\n//       console.error('Error deleting user:', error);\n//     }\n//   };\n\n//   const handleBlockToggle = async (userId) => {\n//     try {\n//       const token = sessionStorage.getItem('authToken');\n//       const user = users.find(user => user._id === userId);\n//       const newBlockStatus = !user.isBlocked;\n//       const response = await axios.put(`http://localhost:5001/api/users/${userId}`, { isBlocked: newBlockStatus }, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       const updatedUser = response.data.user;\n\n//       // Update state to reflect new blocked status\n//       const updatedUsers = users.map(user =>\n//         user._id === userId ? updatedUser : user\n//       );\n//       setUsers(updatedUsers);\n//       setFilteredUsers(updatedUsers);\n//     } catch (error) {\n//       console.error('Error updating block status:', error);\n//     }\n//   };\n\n//   return (\n\n//     <div className=\"user-managementcontainer\">\n//       <h1>User Management</h1>\n\n//       {/* Filter Checkbox */}\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={showPaidOnly}\n//           onChange={handleFilterChange}\n//         />\n//         Show Paid Photographers Only\n//       </label>\n\n//       <table className=\"user-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Plan</th>\n//             <th>Payment Status</th>\n//             <th>Blocked</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredUsers.map(user => (\n//             <tr key={user._id}>\n//               <td>{user.name}</td>\n//               <td className=\"email-column\">{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>{user.planName}</td>\n//               <td>{user.isPaid ? 'Paid' : 'Unpaid'}</td>\n//               <td>{user.isBlocked ? 'Yes' : 'No'}</td>\n//               <td>\n//                 <button onClick={() => handleDelete(user._id)}>Delete</button>\n//                 <button onClick={() => handleBlockToggle(user._id)}>\n//                   {user.isBlocked ? 'Unblock' : 'Block'}\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManagement;\n\n// components/UserManagement.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserManagement.css'; // Ensure this file exists and is styled\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserManagement = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [showPaidOnly, setShowPaidOnly] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('authToken');\n        console.log('Fetching users with token:', token);\n        if (!token) {\n          throw new Error('No token found');\n        }\n        const response = await axios.get('http://localhost:5001/api/users/user-data', {\n          // headers: { Authorization: `Bearer ${token}` },\n        });\n        setUsers(response.data.users);\n        setFilteredUsers(response.data.users); // Initialize filteredUsers\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          // navigate('/auth');\n        } else {\n          console.error('Error fetching users:', error);\n        }\n      }\n    };\n    fetchUsers();\n  }, [navigate]);\n  const handleFilterChange = () => {\n    setShowPaidOnly(!showPaidOnly);\n    if (!showPaidOnly) {\n      const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n      setFilteredUsers(paidPhotographers);\n    } else {\n      setFilteredUsers(users);\n    }\n  };\n  const handleDelete = async userId => {\n    try {\n      const token = sessionStorage.getItem('authToken');\n      await axios.delete(`http://localhost:5001/api/users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUsers(users.filter(user => user._id !== userId));\n      setFilteredUsers(filteredUsers.filter(user => user._id !== userId));\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n  const handleBlockToggle = async userId => {\n    try {\n      const token = sessionStorage.getItem('authToken');\n      const user = users.find(user => user._id === userId);\n      const newBlockStatus = !user.isBlocked;\n      const response = await axios.put(`http://localhost:5001/api/users/${userId}`, {\n        isBlocked: newBlockStatus\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const updatedUser = response.data.user;\n\n      // Update state to reflect new blocked status\n      const updatedUsers = users.map(user => user._id === userId ? updatedUser : user);\n      setUsers(updatedUsers);\n      setFilteredUsers(showPaidOnly ? updatedUsers.filter(u => u.isPaid && u.role === 'photographer') : updatedUsers);\n    } catch (error) {\n      console.error('Error updating block status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-management-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: showPaidOnly,\n        onChange: handleFilterChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this), \"Show Paid Photographers Only\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"user-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Role\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Plan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Payment Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Blocked\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"email-column\",\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.planName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isPaid ? 'Paid' : 'Unpaid'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isBlocked ? 'Yes' : 'No'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.role !== 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleBlockToggle(user._id),\n                children: user.isBlocked ? 'Unblock' : 'Block'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(UserManagement, \"KG5pryCsKkudZeSYZbZ34CS7GMg=\", false, function () {\n  return [useNavigate];\n});\n_c = UserManagement;\nexport default UserManagement;\nvar _c;\n$RefreshReg$(_c, \"UserManagement\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UserManagement","_s","users","setUsers","filteredUsers","setFilteredUsers","showPaidOnly","setShowPaidOnly","navigate","fetchUsers","token","sessionStorage","getItem","console","log","Error","response","get","data","error","status","handleFilterChange","paidPhotographers","filter","user","isPaid","role","handleDelete","userId","delete","headers","Authorization","_id","handleBlockToggle","find","newBlockStatus","isBlocked","put","updatedUser","updatedUsers","map","u","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","name","email","planName","onClick","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/Dashboards/UserManagement.js"],"sourcesContent":["\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import './UserManagement.css'; // Ensure this file exists and is styled\n\n// const UserManagement = () => {\n//   const [users, setUsers] = useState([]);\n//   const [filteredUsers, setFilteredUsers] = useState([]);\n//   const [showPaidOnly, setShowPaidOnly] = useState(false);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const token = sessionStorage.getItem('authToken');\n//         const response = await axios.get('http://localhost:5001/api/users/admin-data', {\n//           headers: { Authorization: `Bearer ${token}` },\n//         });\n//         setUsers(response.data.users);\n//         setFilteredUsers(response.data.users); // Initially set all users as filtered users\n//       } catch (error) {\n//         console.error('Error fetching users:', error);\n//       }\n//     };\n\n//     fetchUsers();\n//   }, []);\n\n//   const handleFilterChange = () => {\n//     setShowPaidOnly(!showPaidOnly);\n//     if (!showPaidOnly) {\n//       const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n//       setFilteredUsers(paidPhotographers);\n//     } else {\n//       setFilteredUsers(users);\n//     }\n//   };\n\n//   const handleDelete = async (userId) => {\n//     try {\n//       const token = sessionStorage.getItem('authToken');\n//       await axios.delete(`http://localhost:5001/api/users/${userId}`, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       setUsers(users.filter(user => user._id !== userId));\n//       setFilteredUsers(filteredUsers.filter(user => user._id !== userId));\n//     } catch (error) {\n//       console.error('Error deleting user:', error);\n//     }\n//   };\n\n//   const handleBlockToggle = async (userId) => {\n//     try {\n//       const token = sessionStorage.getItem('authToken');\n//       const user = users.find(user => user._id === userId);\n//       const newBlockStatus = !user.isBlocked;\n//       const response = await axios.put(`http://localhost:5001/api/users/${userId}`, { isBlocked: newBlockStatus }, {\n//         headers: { Authorization: `Bearer ${token}` },\n//       });\n//       const updatedUser = response.data.user;\n\n//       // Update state to reflect new blocked status\n//       const updatedUsers = users.map(user =>\n//         user._id === userId ? updatedUser : user\n//       );\n//       setUsers(updatedUsers);\n//       setFilteredUsers(updatedUsers);\n//     } catch (error) {\n//       console.error('Error updating block status:', error);\n//     }\n//   };\n\n//   return (\n    \n//     <div className=\"user-managementcontainer\">\n//       <h1>User Management</h1>\n\n//       {/* Filter Checkbox */}\n//       <label>\n//         <input\n//           type=\"checkbox\"\n//           checked={showPaidOnly}\n//           onChange={handleFilterChange}\n//         />\n//         Show Paid Photographers Only\n//       </label>\n\n//       <table className=\"user-table\">\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Email</th>\n//             <th>Role</th>\n//             <th>Plan</th>\n//             <th>Payment Status</th>\n//             <th>Blocked</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {filteredUsers.map(user => (\n//             <tr key={user._id}>\n//               <td>{user.name}</td>\n//               <td className=\"email-column\">{user.email}</td>\n//               <td>{user.role}</td>\n//               <td>{user.planName}</td>\n//               <td>{user.isPaid ? 'Paid' : 'Unpaid'}</td>\n//               <td>{user.isBlocked ? 'Yes' : 'No'}</td>\n//               <td>\n//                 <button onClick={() => handleDelete(user._id)}>Delete</button>\n//                 <button onClick={() => handleBlockToggle(user._id)}>\n//                   {user.isBlocked ? 'Unblock' : 'Block'}\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default UserManagement;\n\n// components/UserManagement.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport './UserManagement.css'; // Ensure this file exists and is styled\n\nconst UserManagement = () => {\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [showPaidOnly, setShowPaidOnly] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const token = sessionStorage.getItem('authToken');\n        console.log('Fetching users with token:', token);\n\n        if (!token) {\n          throw new Error('No token found');\n        }\n\n        const response = await axios.get('http://localhost:5001/api/users/user-data', {\n          // headers: { Authorization: `Bearer ${token}` },\n        });\n\n        setUsers(response.data.users);\n        setFilteredUsers(response.data.users); // Initialize filteredUsers\n      } catch (error) {\n        if (error.response && error.response.status === 401) {\n          // navigate('/auth');\n        } else {\n          console.error('Error fetching users:', error);\n        }\n      }\n    };\n\n    fetchUsers();\n  }, [navigate]);\n\n  const handleFilterChange = () => {\n    setShowPaidOnly(!showPaidOnly);\n    if (!showPaidOnly) {\n      const paidPhotographers = users.filter(user => user.isPaid && user.role === 'photographer');\n      setFilteredUsers(paidPhotographers);\n    } else {\n      setFilteredUsers(users);\n    }\n  };\n\n  const handleDelete = async (userId) => {\n    try {\n      const token = sessionStorage.getItem('authToken');\n      await axios.delete(`http://localhost:5001/api/users/${userId}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setUsers(users.filter(user => user._id !== userId));\n      setFilteredUsers(filteredUsers.filter(user => user._id !== userId));\n    } catch (error) {\n      console.error('Error deleting user:', error);\n    }\n  };\n\n  const handleBlockToggle = async (userId) => {\n    try {\n      const token = sessionStorage.getItem('authToken');\n      const user = users.find(user => user._id === userId);\n      const newBlockStatus = !user.isBlocked;\n      const response = await axios.put(`http://localhost:5001/api/users/${userId}`, { isBlocked: newBlockStatus }, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      const updatedUser = response.data.user;\n\n      // Update state to reflect new blocked status\n      const updatedUsers = users.map(user =>\n        user._id === userId ? updatedUser : user\n      );\n      setUsers(updatedUsers);\n      setFilteredUsers(showPaidOnly ? updatedUsers.filter(u => u.isPaid && u.role === 'photographer') : updatedUsers);\n    } catch (error) {\n      console.error('Error updating block status:', error);\n    }\n  };\n\n  return (\n    <div className=\"user-management-container\">\n      <h1>User Management</h1>\n\n      {/* Filter Checkbox */}\n      <label>\n        <input\n          type=\"checkbox\"\n          checked={showPaidOnly}\n          onChange={handleFilterChange}\n        />\n        Show Paid Photographers Only\n      </label>\n\n      <table className=\"user-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Email</th>\n            <th>Role</th>\n            <th>Plan</th>\n            <th>Payment Status</th>\n            <th>Blocked</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredUsers.map(user => (\n            <tr key={user._id}>\n              <td>{user.name}</td>\n              <td className=\"email-column\">{user.email}</td>\n              <td>{user.role}</td>\n              <td>{user.planName}</td>\n              <td>{user.isPaid ? 'Paid' : 'Unpaid'}</td>\n              <td>{user.isBlocked ? 'Yes' : 'No'}</td>\n              <td>\n                {user.role !== 'admin' && (\n                  <>\n                    <button onClick={() => handleDelete(user._id)}>Delete</button>\n                    <button onClick={() => handleBlockToggle(user._id)}>\n                      {user.isBlocked ? 'Unblock' : 'Block'}\n                    </button>\n                  </>\n                )}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default UserManagement;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}