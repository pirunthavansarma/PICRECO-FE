{"ast":null,"code":"var _jsxFileName = \"/Users/sagee/Desktop/picrego/Frontend/src/Components/EventManagement/photoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\n// Define uploadImages function at the top\nconst uploadImages = async images => {\n  const imageUrls = [];\n  try {\n    for (let image of images) {\n      const formData = new FormData();\n      formData.append(\"myimage\", image);\n      const response = await fetch(\"http://localhost:5001/image/uploadimage\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Image uploaded successfully:\", data);\n        imageUrls.push(data.imageUrl);\n      } else {\n        console.error(\"Failed to upload the image.\");\n        return null;\n      }\n    }\n    return imageUrls; // Return an array of uploaded image URLs\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return null;\n  }\n};\nconst PhotoUpload = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [eventName, setEventName] = useState('');\n  const [images, setImages] = useState([]);\n  const handleImageChange = e => {\n    setImages([...e.target.files]); // Save selected files\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if all fields are filled\n    if (!name || !eventName || images.length === 0) {\n      toast.error(\"Please fill all fields and select images.\");\n      return;\n    }\n\n    // Upload Images\n    const uploadedImageUrls = await uploadImages(images);\n    if (!uploadedImageUrls) {\n      toast.error(\"Image upload failed\");\n      return;\n    }\n\n    // After successfully uploading images, submit event details\n    try {\n      const response = await axios.post('http://localhost:5001/api/events/create', {\n        name,\n        eventName,\n        imageUrls: uploadedImageUrls // Pass uploaded image URLs\n      });\n      if (response.data.success) {\n        toast.success('Event and images uploaded successfully');\n      } else {\n        toast.error('Failed to create event');\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Server error. Failed to create event.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Event Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventName,\n          onChange: e => setEventName(e.target.value),\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Photos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: handleImageChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Upload Event and Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoUpload, \"efTcBvO90cTwaV5fw+prmbUE4R8=\");\n_c = PhotoUpload;\nexport default PhotoUpload;\nvar _c;\n$RefreshReg$(_c, \"PhotoUpload\");","map":{"version":3,"names":["React","useState","axios","toast","jsxDEV","_jsxDEV","configure","uploadImages","images","imageUrls","image","formData","FormData","append","response","fetch","method","body","ok","data","json","console","log","push","imageUrl","error","PhotoUpload","_s","name","setName","eventName","setEventName","setImages","handleImageChange","e","target","files","handleSubmit","preventDefault","length","uploadedImageUrls","post","success","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","required","multiple","_c","$RefreshReg$"],"sources":["/Users/sagee/Desktop/picrego/Frontend/src/Components/EventManagement/photoUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\ntoast.configure();\n\n// Define uploadImages function at the top\nconst uploadImages = async (images) => {\n  const imageUrls = [];\n\n  try {\n    for (let image of images) {\n      const formData = new FormData();\n      formData.append(\"myimage\", image);\n\n      const response = await fetch(\"http://localhost:5001/image/uploadimage\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Image uploaded successfully:\", data);\n        imageUrls.push(data.imageUrl);\n      } else {\n        console.error(\"Failed to upload the image.\");\n        return null;\n      }\n    }\n\n    return imageUrls; // Return an array of uploaded image URLs\n  } catch (error) {\n    console.error(\"Error:\", error);\n    return null;\n  }\n};\n\nconst PhotoUpload = () => {\n  const [name, setName] = useState('');\n  const [eventName, setEventName] = useState('');\n  const [images, setImages] = useState([]);\n\n  const handleImageChange = (e) => {\n    setImages([...e.target.files]); // Save selected files\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate if all fields are filled\n    if (!name || !eventName || images.length === 0) {\n      toast.error(\"Please fill all fields and select images.\");\n      return;\n    }\n\n    // Upload Images\n    const uploadedImageUrls = await uploadImages(images);\n\n    if (!uploadedImageUrls) {\n      toast.error(\"Image upload failed\");\n      return;\n    }\n\n    // After successfully uploading images, submit event details\n    try {\n      const response = await axios.post('http://localhost:5001/api/events/create', {\n        name,\n        eventName,\n        imageUrls: uploadedImageUrls, // Pass uploaded image URLs\n      });\n\n      if (response.data.success) {\n        toast.success('Event and images uploaded successfully');\n      } else {\n        toast.error('Failed to create event');\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Server error. Failed to create event.');\n    }\n  };\n\n  return (\n    <div className=\"photo-upload-container\">\n      <h2>Upload Event Photos</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Your Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Event Name:</label>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            required\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Upload Photos:</label>\n          <input\n            type=\"file\"\n            multiple\n            onChange={handleImageChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Upload Event and Photos</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PhotoUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}