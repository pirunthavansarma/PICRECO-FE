{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/picrego/Frontend/src/Components/Authentication/AuthForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport './AuthForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthForm = () => {\n  _s();\n  const [isSignUp, setIsSignUp] = useState(false);\n  const navigate = useNavigate();\n  const handleToggleSignUp = () => setIsSignUp(true);\n  const handleToggleSignIn = () => setIsSignUp(false);\n  const handleLoginSuccess = (token, role) => {\n    sessionStorage.setItem('authToken', token);\n    sessionStorage.setItem('userRole', role);\n    if (role === 'admin') {\n      navigate('/admin');\n    } else {\n      navigate('/user');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-toggle\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: !isSignUp ? \"active\" : \"\",\n        onClick: handleToggleSignIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: isSignUp ? \"active\" : \"\",\n        onClick: handleToggleSignUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isSignUp ? /*#__PURE__*/_jsxDEV(Register, {\n      onSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Login, {\n      onSuccess: handleLoginSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthForm, \"SMyrgnibCXwKbA+pcCGVKHI8+wk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthForm;\nexport default AuthForm;\nvar _c;\n$RefreshReg$(_c, \"AuthForm\");","map":{"version":3,"names":["React","useState","useNavigate","Login","Register","jsxDEV","_jsxDEV","AuthForm","_s","isSignUp","setIsSignUp","navigate","handleToggleSignUp","handleToggleSignIn","handleLoginSuccess","token","role","sessionStorage","setItem","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/picrego/Frontend/src/Components/Authentication/AuthForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Login from './Login';\nimport Register from './Register';\nimport './AuthForm.css';\n\nconst AuthForm = () => {\n  const [isSignUp, setIsSignUp] = useState(false);\n  const navigate = useNavigate();\n\n  const handleToggleSignUp = () => setIsSignUp(true);\n  const handleToggleSignIn = () => setIsSignUp(false);\n\n  const handleLoginSuccess = (token, role) => {\n    sessionStorage.setItem('authToken', token);\n    sessionStorage.setItem('userRole', role);\n\n    if (role === 'admin') {\n      navigate('/admin');\n    } else {\n      navigate('/user');\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-toggle\">\n        <button className={!isSignUp ? \"active\" : \"\"} onClick={handleToggleSignIn}>Sign In</button>\n        <button className={isSignUp ? \"active\" : \"\"} onClick={handleToggleSignUp}>Sign Up</button>\n      </div>\n      {isSignUp ? (\n        <Register onSuccess={handleLoginSuccess} />\n      ) : (\n        <Login onSuccess={handleLoginSuccess} />\n      )}\n    </div>\n  );\n};\n\nexport default AuthForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,kBAAkB,GAAGA,CAAA,KAAMF,WAAW,CAAC,IAAI,CAAC;EAClD,MAAMG,kBAAkB,GAAGA,CAAA,KAAMH,WAAW,CAAC,KAAK,CAAC;EAEnD,MAAMI,kBAAkB,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK;IAC1CC,cAAc,CAACC,OAAO,CAAC,WAAW,EAAEH,KAAK,CAAC;IAC1CE,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEF,IAAI,CAAC;IAExC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpBL,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACLA,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKa,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7Bd,OAAA;MAAKa,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1Bd,OAAA;QAAQa,SAAS,EAAE,CAACV,QAAQ,GAAG,QAAQ,GAAG,EAAG;QAACY,OAAO,EAAER,kBAAmB;QAAAO,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC3FnB,OAAA;QAAQa,SAAS,EAAEV,QAAQ,GAAG,QAAQ,GAAG,EAAG;QAACY,OAAO,EAAET,kBAAmB;QAAAQ,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvF,CAAC,EACLhB,QAAQ,gBACPH,OAAA,CAACF,QAAQ;MAACsB,SAAS,EAAEZ;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE3CnB,OAAA,CAACH,KAAK;MAACuB,SAAS,EAAEZ;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BID,QAAQ;EAAA,QAEKL,WAAW;AAAA;AAAAyB,EAAA,GAFxBpB,QAAQ;AAiCd,eAAeA,QAAQ;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}