{"ast":null,"code":"var _jsxFileName = \"/Users/sagee/Desktop/picrego/Frontend/src/Components/EventManagement/photoUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify'; // Assuming you have toast for error handling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PhotoUpload = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [eventName, setEventName] = useState('');\n  const [images, setImages] = useState([]);\n  const handleImageChange = e => {\n    setImages([...e.target.files]); // Save selected files\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Validate if all fields are filled\n    if (!name || !eventName || images.length === 0) {\n      toast.error(\"Please fill all fields and select images.\");\n      return;\n    }\n\n    // Upload Images\n    const uploadedImageUrls = await uploadImages(images);\n    if (!uploadedImageUrls) {\n      toast.error(\"Image upload failed\");\n      return;\n    }\n\n    // After successfully uploading images, submit event details\n    try {\n      const response = await axios.post('http://localhost:5001/api/events/create', {\n        name,\n        eventName,\n        imageUrls: uploadedImageUrls // Pass uploaded image URLs\n      });\n      if (response.data.success) {\n        toast.success('Event and images uploaded successfully');\n      } else {\n        toast.error('Failed to create event');\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Server error. Failed to create event.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Event Photos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Your Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Event Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: eventName,\n          onChange: e => setEventName(e.target.value),\n          required: true,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Upload Photos:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          multiple: true,\n          onChange: handleImageChange,\n          className: \"form-control\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Upload Event and Photos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PhotoUpload, \"efTcBvO90cTwaV5fw+prmbUE4R8=\");\n_c = PhotoUpload;\nexport default PhotoUpload;\nvar _c;\n$RefreshReg$(_c, \"PhotoUpload\");","map":{"version":3,"names":["React","useState","axios","toast","jsxDEV","_jsxDEV","PhotoUpload","_s","name","setName","eventName","setEventName","images","setImages","handleImageChange","e","target","files","handleSubmit","preventDefault","length","error","uploadedImageUrls","uploadImages","response","post","imageUrls","data","success","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","required","multiple","_c","$RefreshReg$"],"sources":["/Users/sagee/Desktop/picrego/Frontend/src/Components/EventManagement/photoUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify'; // Assuming you have toast for error handling\n\nconst PhotoUpload = () => {\n  const [name, setName] = useState('');\n  const [eventName, setEventName] = useState('');\n  const [images, setImages] = useState([]);\n\n  const handleImageChange = (e) => {\n    setImages([...e.target.files]); // Save selected files\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Validate if all fields are filled\n    if (!name || !eventName || images.length === 0) {\n      toast.error(\"Please fill all fields and select images.\");\n      return;\n    }\n\n    // Upload Images\n    const uploadedImageUrls = await uploadImages(images);\n\n    if (!uploadedImageUrls) {\n      toast.error(\"Image upload failed\");\n      return;\n    }\n\n    // After successfully uploading images, submit event details\n    try {\n      const response = await axios.post('http://localhost:5001/api/events/create', {\n        name,\n        eventName,\n        imageUrls: uploadedImageUrls, // Pass uploaded image URLs\n      });\n\n      if (response.data.success) {\n        toast.success('Event and images uploaded successfully');\n      } else {\n        toast.error('Failed to create event');\n      }\n    } catch (error) {\n      console.error(error);\n      toast.error('Server error. Failed to create event.');\n    }\n  };\n\n  return (\n    <div className=\"photo-upload-container\">\n      <h2>Upload Event Photos</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label>Your Name:</label>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Event Name:</label>\n          <input\n            type=\"text\"\n            value={eventName}\n            onChange={(e) => setEventName(e.target.value)}\n            required\n            className=\"form-control\"\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <label>Upload Photos:</label>\n          <input\n            type=\"file\"\n            multiple\n            onChange={handleImageChange}\n            className=\"form-control\"\n            required\n          />\n        </div>\n\n        <button type=\"submit\" className=\"btn btn-primary\">Upload Event and Photos</button>\n      </form>\n    </div>\n  );\n};\n\nexport default PhotoUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}