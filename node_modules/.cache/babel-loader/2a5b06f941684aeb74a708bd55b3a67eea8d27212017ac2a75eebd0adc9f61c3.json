{"ast":null,"code":"var _jsxFileName = \"/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/EventManagement/Eventpage.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Eventpage.css'; // Updated path\n\n// const EventPage = () => {\n//   const [isEventSetup, setIsEventSetup] = useState(false);\n//   const [formData, setFormData] = useState({ eventId: '' });\n//   const [errors, setErrors] = useState({});\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleToggle = () => {\n//     setIsEventSetup(!isEventSetup);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const validateFindEvent = () => {\n//     let tempErrors = {};\n//     if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n//     return tempErrors;\n//   };\n\n//   const handleFindEventSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateFindEvent();\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await axios.post('http://localhost:5001/api/events/find-event', {\n//           eventId: formData.eventId\n//         });\n//         setResponseMsg(response.data.message);\n//       } catch (error) {\n//         if (error.response) {\n//           setErrors({ api: error.response.data.message });\n//         }\n//       }\n//     } else {\n//       setErrors(validationErrors);\n//     }\n//   };\n\n//   const goToDashboard = () => {\n//     navigate('/Payment');\n//   };\n\n//   return (\n//     <div className={`eventcontain ${isEventSetup ? 'active' : ''}`} id=\"container\">\n//       <div className=\"form-container event-setup\">\n//         <form\n//           id=\"event-setup-form\"\n//           className=\"p-4\"\n//           onSubmit={isEventSetup ? goToDashboard : handleFindEventSubmit}\n//         >\n//           <h1 className=\"mb-4\">{isEventSetup ? 'Dashboard' : 'Find My Photo'}</h1>\n//           <p className=\"mb-4\">{isEventSetup ? 'Go to your dashboard' : 'Enter the event ID'}</p>\n//           {isEventSetup ? (\n//             <button type=\"button\" className=\"btn btn-primary\" onClick={goToDashboard}>\n//               Dashboard\n//             </button>\n//           ) : (\n//             <>\n//               <input\n//                 type=\"text\"\n//                 name=\"eventId\"\n//                 className=\"form-control mb-3\"\n//                 placeholder=\"Event ID\"\n//                 value={formData.eventId}\n//                 onChange={handleChange}\n//               />\n//               {errors.eventId && <div className=\"text-danger\">{errors.eventId}</div>}\n//               <button type=\"submit\" className=\"btn btn-primary\">Find Event</button>\n//             </>\n//           )}\n//           {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n//           {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n//         </form>\n//       </div>\n\n//       <div className=\"toggle-container\">\n//         <div className=\"toggle\">\n//           <div className=\"toggle-panel toggle-left\">\n//             <h1>Already Have an Event?</h1>\n//             <p>Enter the event ID to Find the photo</p>\n//             <button className=\"btn btn-secondary\" id=\"enter-event\" onClick={handleToggle}>\n//               {isEventSetup ? 'Find My Photo' : 'Dashboard'}\n//             </button>\n//           </div>\n//           <div className=\"toggle-panel toggle-right\">\n//             <h1>Organizing an Event?</h1>\n//             <p>Go to your dashboard</p>\n//             <button className=\"btn btn-secondary\" id=\"setup-event\" onClick={handleToggle}>\n//               {isEventSetup ? 'Dashboard' : 'Create Event'}\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EventPage;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\n// import axios from 'axios';\n// import './Eventpage.css';\n\n// const EventPage = () => {\n//   const [isEventSetup, setIsEventSetup] = useState(false);\n//   const [formData, setFormData] = useState({ eventId: '' });\n//   const [errors, setErrors] = useState({});\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleToggle = () => {\n//     setIsEventSetup(!isEventSetup);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Validation for Find Event\n//   const validateFindEvent = () => {\n//     let tempErrors = {};\n//     if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n//     return tempErrors;\n//   };\n\n//   // Handle Find Event form submission\n//   const handleFindEventSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateFindEvent();\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await axios.post('http://localhost:5001/api/events/find-event', {\n//           eventId: formData.eventId\n//         });\n//         setResponseMsg(response.data.message); // Handle success response\n//         // Navigate to # page if the event is found\n//         navigate('#');\n//       } catch (error) {\n//         if (error.response) {\n//           setErrors({ api: error.response.data.message });\n//         }\n//       }\n//     } else {\n//       setErrors(validationErrors);\n//     }\n//   };\n\n//     // Handle Dashboard navigation\n//     const goToDashboard = () => {\n//       navigate('/payment'); // Navigate to the payment page directly\n//     };\n\n//     return (\n//       <div className={`cont ${isEventSetup ? 'active' : ''}`} id=\"container\">\n//         <div className=\"form-container event-setup\">\n//           <form\n//             id=\"event-setup-form\"\n//             className=\"p-4\"\n//             onSubmit={isEventSetup ? goToDashboard : handleFindEventSubmit}\n//           >\n//             <h1 className=\"mb-4\">{isEventSetup ? 'Dashboard' : 'Find My Photo'}</h1>\n//             <p className=\"mb-4\">{isEventSetup ? 'Go to your dashboard' : 'Enter the event ID'}</p>\n//             {isEventSetup ? (\n//               <button type=\"button\" className=\"btn btn-primary\" onClick={goToDashboard}>\n//                 Dashboard\n//               </button>\n//             ) : (\n//               <>\n//                 <input\n//                   type=\"text\"\n//                   name=\"eventId\"\n//                   className=\"form-control mb-3\"\n//                   placeholder=\"Event ID\"\n//                   value={formData.eventId}\n//                   onChange={handleChange}\n//                 />\n//                 {errors.eventId && <div className=\"text-danger\">{errors.eventId}</div>}\n//                 <button type=\"submit\" className=\"btn btn-primary\">Find Event</button>\n//               </>\n//             )}\n//             {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n//             {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n//           </form>\n//         </div>\n\n//         <div className=\"toggle-container\">\n//           <div className=\"toggle\">\n//             <div className=\"toggle-panel toggle-left\">\n//               <h1>Already Have an Event?</h1>\n//               <p>Enter the event ID to Find the photo</p>\n//               <button className=\"btn btn-secondary\" id=\"enter-event\" onClick={handleToggle}>\n//                 {isEventSetup ? 'Find My Photo' : 'Dashboard'}\n//               </button>\n//             </div>\n//             <div className=\"toggle-panel toggle-right\">\n//               <h1>Organizing an Event?</h1>\n//               <p>Go to your dashboard</p>\n//               <button className=\"btn btn-secondary\" id=\"setup-event\" onClick={handleToggle}>\n//                 {isEventSetup ? 'Dashboard' : 'Create Event'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   };\n\n//   export default EventPage;\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Eventpage.css\";\nimport \"./AuthForm.css\"; // Include necessary CSS for both components\nimport SignUpImage from \"../Authentication/login.png\";\nimport SignInImage from \"../Authentication/Signup.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventPageWithAuth = () => {\n  _s();\n  const [isEventSetup, setIsEventSetup] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState({\n    eventId: \"\"\n  });\n  const [authData, setAuthData] = useState({\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    role: \"user\"\n  });\n  const [errors, setErrors] = useState({});\n  const [responseMsg, setResponseMsg] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Toggle between Event and Dashboard\n  const handleToggleEvent = () => setIsEventSetup(!isEventSetup);\n\n  // Toggle between Login and Register\n  const handleToggleSignUp = () => setIsSignUp(true);\n  const handleToggleSignIn = () => setIsSignUp(false);\n\n  // Handle Change for Event Form\n  const handleEventChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Handle Change for Auth Form\n  const handleAuthChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAuthData({\n      ...authData,\n      [name]: value\n    });\n  };\n\n  // Validate Event Form\n  const validateFindEvent = () => {\n    let tempErrors = {};\n    if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n    return tempErrors;\n  };\n\n  // Validate Auth Form\n  const validateAuth = () => {\n    let tempErrors = {};\n    if (!authData.email) tempErrors.email = \"Email is required\";\n    if (!authData.password) tempErrors.password = \"Password is required\";\n    return tempErrors;\n  };\n\n  // Handle Find Event Form Submit\n  const handleFindEventSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateFindEvent();\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await axios.post(\"http://localhost:5001/api/events/find-event\", {\n          eventId: formData.eventId\n        });\n        setResponseMsg(response.data.message);\n        navigate(\"#\");\n      } catch (error) {\n        if (error.response) {\n          setErrors({\n            api: error.response.data.message\n          });\n        }\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n\n  // Handle Auth Form Submit (Login/Register)\n  const handleAuthSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validateAuth();\n    if (Object.keys(validationErrors).length === 0) {\n      const url = isSignUp ? \"http://localhost:5001/api/users/register\" : \"http://localhost:5001/api/users/login\";\n      try {\n        const response = await axios.post(url, authData);\n        setResponseMsg(response.data.message);\n        sessionStorage.setItem(\"authToken\", response.data.token);\n        sessionStorage.setItem(\"userRole\", response.data.role);\n        navigate(response.data.role === \"admin\" ? \"/admin\" : \"/Eventpage\");\n      } catch (error) {\n        if (error.response) {\n          setErrors({\n            api: error.response.data.message\n          });\n        }\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `main-container ${isEventSetup ? \"event-mode\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-or-auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `event-container ${isEventSetup ? \"active\" : \"\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-container event-setup\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: isEventSetup ? null : handleFindEventSubmit,\n            className: \"p-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: isEventSetup ? \"Dashboard\" : \"Find My Photo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isEventSetup ? \"Go to your dashboard\" : \"Enter the event ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 15\n            }, this), !isEventSetup && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"eventId\",\n                value: formData.eventId,\n                onChange: handleEventChange,\n                placeholder: \"Event ID\",\n                className: \"form-control mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 19\n              }, this), errors.eventId && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-danger\",\n                children: errors.eventId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 38\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-primary\",\n                children: \"Find Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), responseMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-success\",\n              children: responseMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 31\n            }, this), errors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: errors.api\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `auth-container ${isSignUp ? \"sign-up-mode\" : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forms-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAuthSubmit,\n            className: \"signin-signup\",\n            children: [isSignUp ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Register\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: authData.name,\n                onChange: handleAuthChange,\n                placeholder: \"Name\",\n                className: \"form-control mb-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              name: \"email\",\n              value: authData.email,\n              onChange: handleAuthChange,\n              placeholder: \"Email\",\n              className: \"form-control mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: authData.password,\n              onChange: handleAuthChange,\n              placeholder: \"Password\",\n              className: \"form-control mb-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this), isSignUp ? /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 17\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: errors.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 32\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 35\n            }, this), responseMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-success\",\n              children: responseMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 31\n            }, this), errors.api && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-danger\",\n              children: errors.api\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"toggle-panel\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleToggleSignUp,\n              className: \"btn btn-secondary\",\n              children: isSignUp ? \"Already have an account? Sign In\" : \"New here? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-panel toggle-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Organizing an Event?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Go to your dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          onClick: handleToggleEvent,\n          children: isEventSetup ? \"Find My Photo\" : \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(EventPageWithAuth, \"m1jvwavWBUQjSx1uCNLNos/5xmo=\", false, function () {\n  return [useNavigate];\n});\n_c = EventPageWithAuth;\nexport default EventPageWithAuth;\nvar _c;\n$RefreshReg$(_c, \"EventPageWithAuth\");","map":{"version":3,"names":["React","useState","useNavigate","axios","SignUpImage","SignInImage","jsxDEV","_jsxDEV","Fragment","_Fragment","EventPageWithAuth","_s","isEventSetup","setIsEventSetup","isSignUp","setIsSignUp","formData","setFormData","eventId","authData","setAuthData","email","password","name","role","errors","setErrors","responseMsg","setResponseMsg","navigate","handleToggleEvent","handleToggleSignUp","handleToggleSignIn","handleEventChange","e","value","target","handleAuthChange","validateFindEvent","tempErrors","validateAuth","handleFindEventSubmit","preventDefault","validationErrors","Object","keys","length","response","post","data","message","error","api","handleAuthSubmit","url","sessionStorage","setItem","token","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/krish/Documents/project/picrego main/picrego/Frontend/src/Components/EventManagement/Eventpage.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import './Eventpage.css'; // Updated path\n\n// const EventPage = () => {\n//   const [isEventSetup, setIsEventSetup] = useState(false);\n//   const [formData, setFormData] = useState({ eventId: '' });\n//   const [errors, setErrors] = useState({});\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const navigate = useNavigate();\n\n//   const handleToggle = () => {\n//     setIsEventSetup(!isEventSetup);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   const validateFindEvent = () => {\n//     let tempErrors = {};\n//     if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n//     return tempErrors;\n//   };\n\n//   const handleFindEventSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateFindEvent();\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await axios.post('http://localhost:5001/api/events/find-event', {\n//           eventId: formData.eventId\n//         });\n//         setResponseMsg(response.data.message);\n//       } catch (error) {\n//         if (error.response) {\n//           setErrors({ api: error.response.data.message });\n//         }\n//       }\n//     } else {\n//       setErrors(validationErrors);\n//     }\n//   };\n\n//   const goToDashboard = () => {\n//     navigate('/Payment');\n//   };\n\n//   return (\n//     <div className={`eventcontain ${isEventSetup ? 'active' : ''}`} id=\"container\">\n//       <div className=\"form-container event-setup\">\n//         <form\n//           id=\"event-setup-form\"\n//           className=\"p-4\"\n//           onSubmit={isEventSetup ? goToDashboard : handleFindEventSubmit}\n//         >\n//           <h1 className=\"mb-4\">{isEventSetup ? 'Dashboard' : 'Find My Photo'}</h1>\n//           <p className=\"mb-4\">{isEventSetup ? 'Go to your dashboard' : 'Enter the event ID'}</p>\n//           {isEventSetup ? (\n//             <button type=\"button\" className=\"btn btn-primary\" onClick={goToDashboard}>\n//               Dashboard\n//             </button>\n//           ) : (\n//             <>\n//               <input\n//                 type=\"text\"\n//                 name=\"eventId\"\n//                 className=\"form-control mb-3\"\n//                 placeholder=\"Event ID\"\n//                 value={formData.eventId}\n//                 onChange={handleChange}\n//               />\n//               {errors.eventId && <div className=\"text-danger\">{errors.eventId}</div>}\n//               <button type=\"submit\" className=\"btn btn-primary\">Find Event</button>\n//             </>\n//           )}\n//           {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n//           {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n//         </form>\n//       </div>\n\n//       <div className=\"toggle-container\">\n//         <div className=\"toggle\">\n//           <div className=\"toggle-panel toggle-left\">\n//             <h1>Already Have an Event?</h1>\n//             <p>Enter the event ID to Find the photo</p>\n//             <button className=\"btn btn-secondary\" id=\"enter-event\" onClick={handleToggle}>\n//               {isEventSetup ? 'Find My Photo' : 'Dashboard'}\n//             </button>\n//           </div>\n//           <div className=\"toggle-panel toggle-right\">\n//             <h1>Organizing an Event?</h1>\n//             <p>Go to your dashboard</p>\n//             <button className=\"btn btn-secondary\" id=\"setup-event\" onClick={handleToggle}>\n//               {isEventSetup ? 'Dashboard' : 'Create Event'}\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default EventPage;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate\n// import axios from 'axios';\n// import './Eventpage.css';\n\n// const EventPage = () => {\n//   const [isEventSetup, setIsEventSetup] = useState(false);\n//   const [formData, setFormData] = useState({ eventId: '' });\n//   const [errors, setErrors] = useState({});\n//   const [responseMsg, setResponseMsg] = useState('');\n//   const navigate = useNavigate(); // Initialize useNavigate\n\n//   const handleToggle = () => {\n//     setIsEventSetup(!isEventSetup);\n//   };\n\n//   const handleChange = (e) => {\n//     const { name, value } = e.target;\n//     setFormData({ ...formData, [name]: value });\n//   };\n\n//   // Validation for Find Event\n//   const validateFindEvent = () => {\n//     let tempErrors = {};\n//     if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n//     return tempErrors;\n//   };\n\n//   // Handle Find Event form submission\n//   const handleFindEventSubmit = async (e) => {\n//     e.preventDefault();\n//     const validationErrors = validateFindEvent();\n//     if (Object.keys(validationErrors).length === 0) {\n//       try {\n//         const response = await axios.post('http://localhost:5001/api/events/find-event', {\n//           eventId: formData.eventId\n//         });\n//         setResponseMsg(response.data.message); // Handle success response\n//         // Navigate to # page if the event is found\n//         navigate('#');\n//       } catch (error) {\n//         if (error.response) {\n//           setErrors({ api: error.response.data.message });\n//         }\n//       }\n//     } else {\n//       setErrors(validationErrors);\n//     }\n//   };\n\n//     // Handle Dashboard navigation\n//     const goToDashboard = () => {\n//       navigate('/payment'); // Navigate to the payment page directly\n//     };\n  \n//     return (\n//       <div className={`cont ${isEventSetup ? 'active' : ''}`} id=\"container\">\n//         <div className=\"form-container event-setup\">\n//           <form\n//             id=\"event-setup-form\"\n//             className=\"p-4\"\n//             onSubmit={isEventSetup ? goToDashboard : handleFindEventSubmit}\n//           >\n//             <h1 className=\"mb-4\">{isEventSetup ? 'Dashboard' : 'Find My Photo'}</h1>\n//             <p className=\"mb-4\">{isEventSetup ? 'Go to your dashboard' : 'Enter the event ID'}</p>\n//             {isEventSetup ? (\n//               <button type=\"button\" className=\"btn btn-primary\" onClick={goToDashboard}>\n//                 Dashboard\n//               </button>\n//             ) : (\n//               <>\n//                 <input\n//                   type=\"text\"\n//                   name=\"eventId\"\n//                   className=\"form-control mb-3\"\n//                   placeholder=\"Event ID\"\n//                   value={formData.eventId}\n//                   onChange={handleChange}\n//                 />\n//                 {errors.eventId && <div className=\"text-danger\">{errors.eventId}</div>}\n//                 <button type=\"submit\" className=\"btn btn-primary\">Find Event</button>\n//               </>\n//             )}\n//             {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n//             {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n//           </form>\n//         </div>\n  \n//         <div className=\"toggle-container\">\n//           <div className=\"toggle\">\n//             <div className=\"toggle-panel toggle-left\">\n//               <h1>Already Have an Event?</h1>\n//               <p>Enter the event ID to Find the photo</p>\n//               <button className=\"btn btn-secondary\" id=\"enter-event\" onClick={handleToggle}>\n//                 {isEventSetup ? 'Find My Photo' : 'Dashboard'}\n//               </button>\n//             </div>\n//             <div className=\"toggle-panel toggle-right\">\n//               <h1>Organizing an Event?</h1>\n//               <p>Go to your dashboard</p>\n//               <button className=\"btn btn-secondary\" id=\"setup-event\" onClick={handleToggle}>\n//                 {isEventSetup ? 'Dashboard' : 'Create Event'}\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     );\n//   };\n  \n//   export default EventPage;\n  \nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./Eventpage.css\";\nimport \"./AuthForm.css\"; // Include necessary CSS for both components\nimport SignUpImage from \"../Authentication/login.png\";\nimport SignInImage from \"../Authentication/Signup.png\";\n\nconst EventPageWithAuth = () => {\n  const [isEventSetup, setIsEventSetup] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(false);\n  const [formData, setFormData] = useState({ eventId: \"\" });\n  const [authData, setAuthData] = useState({ email: \"\", password: \"\", name: \"\", role: \"user\" });\n  const [errors, setErrors] = useState({});\n  const [responseMsg, setResponseMsg] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Toggle between Event and Dashboard\n  const handleToggleEvent = () => setIsEventSetup(!isEventSetup);\n\n  // Toggle between Login and Register\n  const handleToggleSignUp = () => setIsSignUp(true);\n  const handleToggleSignIn = () => setIsSignUp(false);\n\n  // Handle Change for Event Form\n  const handleEventChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({ ...formData, [name]: value });\n  };\n\n  // Handle Change for Auth Form\n  const handleAuthChange = (e) => {\n    const { name, value } = e.target;\n    setAuthData({ ...authData, [name]: value });\n  };\n\n  // Validate Event Form\n  const validateFindEvent = () => {\n    let tempErrors = {};\n    if (!formData.eventId) tempErrors.eventId = \"Event ID is required\";\n    return tempErrors;\n  };\n\n  // Validate Auth Form\n  const validateAuth = () => {\n    let tempErrors = {};\n    if (!authData.email) tempErrors.email = \"Email is required\";\n    if (!authData.password) tempErrors.password = \"Password is required\";\n    return tempErrors;\n  };\n\n  // Handle Find Event Form Submit\n  const handleFindEventSubmit = async (e) => {\n    e.preventDefault();\n    const validationErrors = validateFindEvent();\n    if (Object.keys(validationErrors).length === 0) {\n      try {\n        const response = await axios.post(\"http://localhost:5001/api/events/find-event\", {\n          eventId: formData.eventId,\n        });\n        setResponseMsg(response.data.message);\n        navigate(\"#\");\n      } catch (error) {\n        if (error.response) {\n          setErrors({ api: error.response.data.message });\n        }\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n\n  // Handle Auth Form Submit (Login/Register)\n  const handleAuthSubmit = async (e) => {\n    e.preventDefault();\n    const validationErrors = validateAuth();\n    if (Object.keys(validationErrors).length === 0) {\n      const url = isSignUp\n        ? \"http://localhost:5001/api/users/register\"\n        : \"http://localhost:5001/api/users/login\";\n      try {\n        const response = await axios.post(url, authData);\n        setResponseMsg(response.data.message);\n        sessionStorage.setItem(\"authToken\", response.data.token);\n        sessionStorage.setItem(\"userRole\", response.data.role);\n        navigate(response.data.role === \"admin\" ? \"/admin\" : \"/Eventpage\");\n      } catch (error) {\n        if (error.response) {\n          setErrors({ api: error.response.data.message });\n        }\n      }\n    } else {\n      setErrors(validationErrors);\n    }\n  };\n\n  return (\n    <div className={`main-container ${isEventSetup ? \"event-mode\" : \"\"}`}>\n      <div className=\"event-or-auth\">\n        {/* Event Form */}\n        <div className={`event-container ${isEventSetup ? \"active\" : \"\"}`}>\n          <div className=\"form-container event-setup\">\n            <form onSubmit={isEventSetup ? null : handleFindEventSubmit} className=\"p-4\">\n              <h1>{isEventSetup ? \"Dashboard\" : \"Find My Photo\"}</h1>\n              <p>{isEventSetup ? \"Go to your dashboard\" : \"Enter the event ID\"}</p>\n              {!isEventSetup && (\n                <>\n                  <input\n                    type=\"text\"\n                    name=\"eventId\"\n                    value={formData.eventId}\n                    onChange={handleEventChange}\n                    placeholder=\"Event ID\"\n                    className=\"form-control mb-3\"\n                  />\n                  {errors.eventId && <div className=\"text-danger\">{errors.eventId}</div>}\n                  <button type=\"submit\" className=\"btn btn-primary\">\n                    Find Event\n                  </button>\n                </>\n              )}\n              {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n              {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n            </form>\n          </div>\n        </div>\n\n        {/* Auth Form */}\n        <div className={`auth-container ${isSignUp ? \"sign-up-mode\" : \"\"}`}>\n          <div className=\"forms-container\">\n            <form onSubmit={handleAuthSubmit} className=\"signin-signup\">\n              {isSignUp ? (\n                <>\n                  <h1>Register</h1>\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    value={authData.name}\n                    onChange={handleAuthChange}\n                    placeholder=\"Name\"\n                    className=\"form-control mb-3\"\n                  />\n                </>\n              ) : null}\n              <input\n                type=\"email\"\n                name=\"email\"\n                value={authData.email}\n                onChange={handleAuthChange}\n                placeholder=\"Email\"\n                className=\"form-control mb-3\"\n              />\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={authData.password}\n                onChange={handleAuthChange}\n                placeholder=\"Password\"\n                className=\"form-control mb-3\"\n              />\n              {isSignUp ? (\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Register\n                </button>\n              ) : (\n                <button type=\"submit\" className=\"btn btn-primary\">\n                  Login\n                </button>\n              )}\n              {errors.email && <div className=\"text-danger\">{errors.email}</div>}\n              {errors.password && <div className=\"text-danger\">{errors.password}</div>}\n              {responseMsg && <div className=\"text-success\">{responseMsg}</div>}\n              {errors.api && <div className=\"text-danger\">{errors.api}</div>}\n            </form>\n          </div>\n          <div className=\"toggle-container\">\n            <div className=\"toggle-panel\">\n              <button onClick={handleToggleSignUp} className=\"btn btn-secondary\">\n                {isSignUp ? \"Already have an account? Sign In\" : \"New here? Sign Up\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"toggle-container\">\n        <div className=\"toggle-panel toggle-left\">\n          <h1>Organizing an Event?</h1>\n          <p>Go to your dashboard</p>\n          <button className=\"btn btn-secondary\" onClick={handleToggleEvent}>\n            {isEventSetup ? \"Find My Photo\" : \"Dashboard\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EventPageWithAuth;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,OAAO,gBAAgB,CAAC,CAAC;AACzB,OAAOC,WAAW,MAAM,6BAA6B;AACrD,OAAOC,WAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}